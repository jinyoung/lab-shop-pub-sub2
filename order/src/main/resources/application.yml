server:
  port: 8080
//<<< Resilency / Circuit Breaker
feign:
  hystrix:
    enabled: true
hystrix:
  command:
    default:
      execution.isolation.thread.timeoutInMilliseconds: 500
//>>> Resilency / Circuit Breaker
spring:
  application:
    name: order
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  kafka:
    producer:
      retries: 5
      acks: all
      properties:
        enable:
          idempotence: true   # Set Producer exactly once Trx
    consumer:
      properties:
        spring.json.trusted.packages: "*"
        isolation.level: read_committed         
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          transaction:
            transactionIdPrefix: tx-${random.uuid}   
        bindings:
          event-in:
            consumer:
              autoCommitOffset: false    # Disable Offset auto commit
              enableDlq: true
              dlqName: dlq-labshoppubsub
              dlqPartitions: 1         
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: order
//<<< EDA / Topic Name
          destination: labshoppubsub
//>>> EDA / Topic Name
          contentType: application/json
        event-out:
//<<< EDA / Topic Name
          destination: labshoppubsub
//>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

api:
  url:
    inventory: localhost:8082


server:
  port: 8081

---

spring:
  profiles: docker
  kafka:
    producer:
      retries: 5
      acks: all
      properties:
        enable:
          idempotence: true   # Set Producer exactly once Trx
    consumer:
      properties:
        spring.json.trusted.packages: "*"
        isolation.level: read_committed    
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
          transaction:
            transactionIdPrefix: tx-${random.uuid}   
        bindings:
          event-in:
            consumer:
              autoCommitOffset: false    # Disable Offset auto commit
              enableDlq: true
              dlqName: dlq-labshoppubsub
              dlqPartitions: 1              
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: order
          destination: labshoppubsub
          contentType: application/json
        event-out:
          destination: labshoppubsub
          contentType: application/json

api:
  url:
    inventory: localhost:8080


